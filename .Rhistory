help(lm)
install.packages("tidyverse", dependencies = TRUE)
installed.packages()
install.packages("magic")
magic(5)
??magic
a
7%/%3
# get library
library(magic)
a = magic(7)
a
365%/%7
365%%7
5+6
#cociente
8%/%3
# residuo
8%%3
3^pi
#infinite
Inf
-Inf
# error
NaN
5/0
5+ "7"
5/0
# number in science notation
2^-18
log(exp(5))
# logaritmo base 10
log(1000, 10)
log10(1000)
# value absolute
abs(-pi)
# factorial
factorial(5)
# combinatoria
choose(7, 3)
factorial(0)
# combinatoria
choose(7, 3)
choose(3, 5)
# angule in radians
sin(90 * pi/2)
# angule in radians
sin(90)
# angule in radians
sin(90 * pi/180)
cos(53 * pi/180)
acos(1/2)
acos(1/2) * 180/pi
tan(pi)
# show n significant numbers
print(sqrt(2), 10)
# redondeo
round(1.25679897, 4)
# parte entera por defecto
floor(2.56)
# parte entreta por exceso
ceiling(2.56)
# parte entreta por exceso
ceiling(2.16)
# parte entera del numero
trunc(5.86)
myvar1 = 12
myvar2 <- 151
View(a)
myvar1 = 12
myvar2 <- 151
myvar1 = pi/2
myvar2 <- exp(2)
cos(pi/4) + sin(pi/4) -> z
z
z = 2 * z
z = 2 * z
z = 2 * z
z = 2 * z
z = 2 * z
z = 2 * z
z = 2 * z
z = 2 * z
z = 2 * z
z = z / 2
z = z / 2
z = z / 2
z = z / 2
z = z / 2
z = z / 2
z = z / 2
z = z / 2
z = z / 2
# function
doble = function(x) {2 * x}
doble(4)
doble(pi)
suma = function(a, b) {
a + b
}
suma(1,8)
suma(1,8)
product <- function(x, y, z) {x*y*z}
product(1,2,3)
# list variables
ls()
# deletele variable
rm(suma)
# delete all variables
rm(list = ls())
operaciones = function(a, b) {
print("suma")
print(a+b)
print("resta")
print(a-b)
print("multiplicacion")
print(a*b)
print("division")
print(a/b)
}
operaciones(8, 5)
operaciones = function(a, b) {
print("suma", a + b)
print(a+b)
print("resta")
print(a-b)
print("multiplicacion")
print(a*b)
print("division")
print(a/b)
}
operaciones(8, 5)
operaciones = function(a, b) {
print("suma")
print(a+b)
print("resta")
print(paste(sprintf("%i - %i = ", a, b)),a-b)
print("multiplicacion")
print(a*b)
print("division")
print(a/b)
}
operaciones(8, 5)
operaciones = function(a, b) {
print("suma")
print(a+b)
print("resta")
print(paste(sprintf("%i - %i = ", a, b),a-b))
print("multiplicacion")
print(a*b)
print("division")
print(a/b)
}
operaciones(8, 5)
operaciones = function(a, b) {
print("suma")
print(a+b)
print("resta")
print(paste(sprintf("%i - %i = ", a, b),a-b))
print("multiplicacion")
print(a*b)
print("division")
print(a/b)
print("cociente")
print(paste(sprintf("%i / %i = "), a, b))
}
operaciones(8, 5)
operaciones = function(a, b) {
print("suma")
print(a+b)
print("resta")
print(paste(sprintf("%i - %i = ", a, b),a-b))
print("multiplicacion")
print(a*b)
print("division")
print(a/b)
print("cociente")
print(paste(sprintf("%i / %i = ", a, b), a, b))
}
operaciones(8, 5)
operaciones = function(a, b) {
print("suma")
print(a+b)
print("resta")
print(paste(sprintf("%i - %i = ", a, b),a-b))
print("multiplicacion")
print(a*b)
print("division")
print(a/b)
print("cociente")
print(paste(sprintf("%i / %i = ", a, b), a %% b))
}
operaciones = function(a, b) {
print("suma")
print(a+b)
print("resta")
print(paste(sprintf("%i - %i = ", a, b),a-b))
print("multiplicacion")
print(a*b)
print("division")
print(a/b)
print("cociente")
print(paste(sprintf("%i / %i = ", a, b), a %/% b))
}
operaciones(8, 5)
a <- 5 + 6i
mod(a)
Mod(a)
Conj(a)
Arg(a)
Arg(a) * 180/pi
a <- 1 + sqrt(3)i
a <- 1 + sqrt(3)*i
Mod(a)
a <- 1 + 2*i
Mod(a)
Conj(a)
Arg(a) * 180/pi
a <- 1 + 2i
Mod(a)
Conj(a)
Arg(a) * 180/pi
sqrt(-5)
sqrt(as.complex(-5))
exp(3 + 2i)
exp(1 + 1i)
complex(modulus = 6, argument = pi/4) -> z1
z1
